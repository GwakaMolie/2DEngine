#include <SDL2/SDL.h>
#include <vector>
#include "Vector2D.hpp"

class InputHandler {

public:

    static InputHandler* Instance(); 


    const int m_joystickDeadZone = 20000;

    void initialiseJoysticks();
    bool joysticksInitialised();

    int xvalue(int joy, int stick);
    int yvalue(int joy, int stick);

    bool getJoyButtonState(int joy, int buttonNumber);
    bool getMouseButtonState(int buttonNumber);
    Vector2D* getMousePosition();

    void update();
    void clean();

private:
    InputHandler();
    ~InputHandler();
    static InputHandler* s_pInstance;

    std::vector<SDL_Joystick*> m_joysticks;
    std::vector<std::pair<Vector2D*, Vector2D*>> m_joystickValues;
    bool m_bJoysticksInitialised;
    std::vector<std::vector<bool>> m_joyButtonStates;

    std::vector<bool> m_mouseButtonStates;
    Vector2D* m_mousePosition;


}; 

enum mouse_buttons{ LEFT = 0, MIDDLE = 1, RIGHT = 2 };
typedef InputHandler TheInputHandler;